HW 4 due tonight

HW 5 will be posted after class

/////////////////////////

Today:

- Discuss HW 4 problems 6 and 7
- Proving theorems
- Soundness and completeness
- Begin sets

/////////////////////////

HW 4 problem 6

p → q   equivalent to   ¬p ∨ q

PbC assume ¬(¬p || q)

    if (¬p || q), could contradict w/ assumtion

    get p by itself

    try NegI - assume p
        goal: contradiction

    goal: contradiction

p → q  ⊢  ¬p ∨ q


¬p ∨ q   ⊢  p → q

try ImplyI to build conclusion, 
    within subproof, do OrE on the premise

/////////////////////////

HW 4 problem 7

¬(p → q)    equivalent to   p ∧ ¬q

¬(p → q)  ⊢  p ∧ ¬q

try PbC, assume ¬(p ∧ ¬q)
    try building p -> q to contradict w/ premise

    ImplyI: assume p
        goal: q
        try PbC to get q, assume ¬q
            goal: contradiction
    goal: contradiction


p ∧ ¬q   ⊢   ¬(p → q)
    use NegI, assume p -> q


/////////////////////////

A THEOREM in propositional logic is something that is
always true with no need for premises. For example:


Law of the excluded middle. (LEM)

p ∨ ¬p



What would a theorem be in a truth table?
    tautology


Prove LEM:

⊢ ( p ∨ ¬p )               //lem.sc



⊢ (theorem that you are trying to prove)

/////////////////////////////////

Bigger examples:

big1.sc

big2.sc

//////////////////////////////////

SOUNDNESS and COMPLETENESS of natural deduction in
    propositional logic

    "provable": prove using natural deduction
    "true": demonstrate an argument with truth tables


SOUNDNESS: everything that is provable is actually true




COMPLETENESS: everything that is true is provable






--> what would it mean if a proof system was unsound?
could prove arguments that were untrue




--> what would it mean if a proof system was incomplete?
there are arguments that are true but couldn't be proved




Propositional logic is both SOUND and COMPLETE.



Using natural deduction to prove the sequent:

    P1, P2, ..., Pn ⊢ q

Is equivalent to using truth tables to show that whenever

    P1, P2, ..., Pn

are true, then q is also true

//////////////////////////////////////

(in-class quiz)

//////////////////////////////////////

Sets.

order doesnt matter in a set
neither does repitition


{1,1,3,5,7} = {1,3,5,7} = {7,3,1,5}



- A set is an unordered collection of elements

∈: is in, exists in

    x ∈ A: x exists in set A, x is in A

    x ∉ A: x does not exist in set A, x is not in A



Example: A = {1,4,7,11,20}

    1 ∈ A
    2 ∉ A



- Common sets in math:

    ℕ: natural numbers
        1, 2, 3, 4, ...
    ℤ: All integers (negative and positive integers)

    ℚ: Rational numbers
        p/q where q != 0, p & q ∈ ℤ

    ℝ: real numbers

    ℂ: Complex numbers

    ∅: null set

⊂ - subset

ℕ ⊂ ℤ ⊂ ℚ ⊂ ℝ ⊂ ℂ

////////////////////////////////////

Set builder notation.

: means, where, such that
| means the same thing

{variable : conditions}


{x: x ∈ ℕ, 5 ≤ x ≤ 10}

{5, 6, 7, 8, 9, 10}



{k : k is a letter in "abracadabra"}

{a, b, c, d, r}


{x : x = 2k,  k ∈ ℕ}

{2, 4, 6, 8, ...} even numbers

{n : n = k^2, k ∈ Z}

{0, 1, 4, 9, ...}


{n : n = 3a + 1, a ∈ ℕ, 1 ≤ a ≤ 4}

{4, 7, 10, 13}

///////////////////////////////////////

Describe these sets in set builder notation


{5,10,15}



{CIS 115, CIS 200, CIS 300, CIS 301}



{2,4,8,16,32}


///////////////////////////////////////
∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

///////////////////////////////////////

Set union, ⋃

The union of the sets A and B, written A ⋃ B, is the set
of all elements....?


How could we express in set builder notation?

A ⋃ B =


//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

Set intersection, ⋂

The intersection of the sets A and B, written A ⋂ B, is the set
of all elements that are...?


How could we express in set builder notation?

A ⋂ B =

///////////////////////////////////////

Set difference,

/ or \ (means the same thing)

The difference between the sets A and B, written A - B, is the set
of all elements...?


How could we express in set builder notation?

A - B =

//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

A = {1,3,7,10,11,12}

B = {2,3,4,5,6,7}


Find:

A ⋃ B =

A ⋂ B =

A - B =

B - A =


//////////////////

Subset - A is a subset of B, written A ⊆ B, if
    all elements in A are also in B.

(We say A ⊂ B if A is a subset of B but A ≠ B.)




Example:

A = {1,3,4}

B = {1,3,5,8}

--> is A a subset of B?



A = {8,1,3}

B = {1,3,5,8}

--> is A a subset of B?



//////////////////////////////////

Next time:
- quantifiers
- proofs with sets
- limitations of propositional logic
- intro to predicate logic