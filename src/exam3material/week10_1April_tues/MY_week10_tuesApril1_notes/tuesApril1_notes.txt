HW 8 due tonight

    #5: prove that if n is a positive integer, then
        n^5 - n is divisible by 5

        hint: you will need to expand out the polynomial
            (k+1)^5 - (k+1)



    #6: prove that if n is natural number, then:

            1*1! + 2*2! + ... + n*n! = (n+1)! - 1

        5! = 

        6! = 

        n! = 

        (n+1)! = (n+1)*n!

        (n+2)! = (n+2)*(n+1)*n!


HW 9 will be posted after class

////////////////////////////////////////////

Today:
- Continue mathematical induction
- Recursive definitions
- Begin survey of proof techniques

////////////////////////////////////////////

Reminder: Induction template.

1) Label the base case. Prove the claim is true for the smallest element 
    in your domain.


2) Label the inductive step. State the inductive hypothesis:
        "We assume the inductive hypothesis: that <insert claim> holds 
        for some fixed k in <insert domain>."

    Prove that the claim holds for k+1 (you will need to use your inductive
    hypothesis).


3) Summarize: "It follows by induction that <insert claim> holds 
    for all <insert domain>."

//////////////////////////////////////////////

Example: Prove that the sum of the first n odd numbers is n^2.

    (what is our domain?) natural numbers
    (Base case: n=1)

How can we express the sum of the first n odd numbers more formally?

1 + 3 +... (2n-1)


So, what is our claim?
For each natural number N, we want to prove: 1 + 3 + ... + (2n-1) = n^2


Proof by induction.

Base case, prove claim holds for n = 1,
    1 = 1^2
the base case holds

We assume the inductive hypothesis that:
    1 + 3 +... (2k-1) = k^2
for some fixed natural number k. We must show that:
    1 + 3 + ... (2k-1) + (2(k+1)-1) = (k+1)^2

WE have that:
    1 + 3 + ... (2k-1) + (2(k+1)-1) = k^2 + (2k + 1) using inductive hypothesis
                                    = (k+1)^2 by factoring

The inductive step holds, this proves the claim for all natural numbers n.


/////////////////////////////////

Example: Prove that 3^n - 1 is even for all positive integers n.



what does "even" mean? 

(even: multiple of 2, no remainder when divided by 2)


Proof by induction.

Base case. 3^n -1 is even 
3^1 -1 = 2 which is even

inductive step. We assume the inductive hypothesis that for some positive integer k, 3^k -1 is even.

we have that
    3^(k+1) - 1 =
                = 3 * (3^k) - 1 
                = 3 * (3^k - 1) + 3 - 1
                = 3 * (3^k -1) + 2 

We know 3^k -1 we know is even by inductive hypothesis, so 3*3^(k) - 1 is also even...

//////////////////////////////////


Recursively defined functions.


To define a function whose domain is the set of natural numbers
(or some other set of integers with a lowest value)

Base case: Specify the value of the function at 1 (or some other
    lowest value). (There may be more than one base case.)


Recursive step: Give a rule for finding the value of the function
    at all bigger integers in our domain using its smaller values




//////////////////////////////////

Example (domain: all natural numbers, 1 and up):

f(1) = 3
f(n) = 2f(n-1) + 3, for n > 1


What is f(3)?
    f(3) = 2f(2) + 3 = 2(9) + 3 = 21 
    f(2) = 2f(1) + 3 = 2(3) + 3 = 9
    f(1) = 3




//////////////////////////////////

What does this define?

g(1) = 1
g(n) = n * g(n-1), for n > 1

n  | g(n)
---------
1  | 1
2  | 2
3  | 6

= n!



//////////////////////////////////

Consider this pattern: 1, 2, 4, 7, 11, 16, 22, ...

Write a recursive definition.

Over natural numbers.

Base case? 
f(1) = 1

Recursive case?
f(n)= f(n-1) + (n-1) for all n > 1

n   |   f(n)
------------
1   |   1
2   |   2
3   |   4
4   |   7

////////////////////////////////

Recursively defined sets:


Consider the subset S of the set of integers, defined as:

Base case: 1, 2 ∈ S

Recursive case: x ∈ S ⋀ y ∈ S → xy ∈ S

--> what are the elements in S?

{1, 2, 4, 8, 16 }
(powers of 2)



///////////////////////////////

Write a recursive definition for the set {1, 3, 5, 7, ...}

Base case: 1 ∈ S
Recursive case: x ∈ S → x+2 ∈ S

////////////////////////////////

(in-class quiz)

////////////////////////////////

∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

/////////////////////////////////

Now we will look at more informal proofs.

--> why? (prove programs are correct, prove running time,
    prove systems are secure, make inferences, prove specifications
    are consistent, etc.)

///////////////////////////////

Definitions.


An integer n is *even* if n = 2k for some k ∈ ℤ.



An integer n is *odd* if n = 2k + 1 for some k ∈ ℤ.



Any integer that is not odd is even,
and any integer that is not even is odd.


///////////////////////////////

Direct (conditional) proof


- Often want to prove things of the form: "If P, then Q"

--> how would we do this with natural deduction?





/////////////////////////////

Direct proof template. If P, then Q

Assume P
...
Q





/////////////////////////////

Example: prove that the product of two even integers is even.


If our domain is integers and we have the predicate Even(x), how
would you write this statement in predicate logic?

∀ x ∀ y (Even(x) & Even(y) → Even(xy)) 


What's the idea of proving this in predicate logic?

Pick 2 ranom individuals, maybe n, and m
Assume Even(n)) & Even(m)

Direct proof:

Let n and m be even integers. Since n is even, then n = 2k for some integer k. Since m is even then m = 2b for some integer b.
    nm = 2k2b
       = 2(2kb)

Thus nm = 2w where w is the integer 2k2b, thus nm is even

(want to show nm is even )



--> How is our proof similar to natural deduction?

//////////////////////////////

Next time:
- More proof techniques